buildscript {
	ext {
		springBootVersion = '1.5.4.RELEASE'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("com.bmuschko:gradle-docker-plugin:2.6.3")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.bmuschko.docker-remote-api'

jar {
	baseName = 'mobile_car_wash'
	version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')
	testCompile('org.springframework.boot:spring-boot-starter-test')

	//my dependencies
	compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.6'
	compile group: 'org.springframework.cloud', name: 'spring-cloud-config-server', version: '1.3.1.RELEASE'
	compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-eureka', version: '1.3.1.RELEASE'
	compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-zuul', version: '1.3.1.RELEASE'
	//compile('org.springframework.data:spring-data-rest-hal-browser')
	compile('org.springframework.boot:spring-boot-starter-integration')
	compile('org.springframework.boot:spring-boot-starter-jdbc')
	compile('org.springframework.boot:spring-boot-starter-mail')
	compile('org.springframework.boot:spring-boot-starter-mail')
	compile('org.springframework.boot:spring-boot-starter-social-facebook')
	compile('org.springframework.boot:spring-boot-starter-social-linkedin')
	compile('org.springframework.boot:spring-boot-starter-social-twitter')
	compile('org.springframework.boot:spring-boot-starter-validation')
	compile group: 'commons-codec', name: 'commons-codec', version: '1.9'
	compile group: 'com.cloudinary', name: 'cloudinary-http43', version: '1.2.2'
	// https://mvnrepository.com/artifact/org.json/json
	compile group: 'org.json', name: 'json', version: '20090211'

	runtime('mysql:mysql-connector-java')
	testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')

}
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.Dockerfile
task createDockerfile(type: Dockerfile) {
	destFile = project.file('build/Dockerfile')
	from 'ofayau/ejre:8-jre'
	maintainer 'Emmanuel Nare Madupo <emmanuelmadupo@gmail.com>'
	//exposePort dockerPort

	copyFile "libs/mobile_car_wash-0.0.1-SNAPSHOT.jar", "mobile_car_wash-0.0.1-SNAPSHOT.jar"

	environmentVariable "TZ","Africa/Johannesburg"
	runCommand("ln -snf /usr/share/zoneinfo/\$TZ /etc/localtime && echo \$TZ > /etc/timezone")
	//run(null, "ln -snf /usr/share/zoneinfo/Africa/Johannesburg /etc/localtime && echo Africa/Johannesburg > /etc/timezone")

	entryPoint 'java','-jar',"mobile_car_wash-0.0.1-SNAPSHOT.jar"
}

task buildDockerImage(type: DockerBuildImage) {
	dependsOn createDockerfile
	inputDir = createDockerfile.destFile.parentFile
	tag = "latest"
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.9'
}


